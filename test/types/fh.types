type H('a1) : F('a1) + 'a1
type F('a1) : H('a1) @@ [0,1]

# Harder mutual recursion with arities flipped and mixed annotations
type H2('a1,'a2) : F2('a2,'a1) + 'a1
type F2('a1,'a2) : (H2('a1,'a2) @@ [0,1]) + ('a2 @@ [1,0])

# Three-way abstract cycle with cross-axis influence
type X('a1) : Y('a1) @@ [1,0] + Z('a1) @@ [0,1]
type Y('a1) : X('a1) + 'a1
type Z('a1) : Y('a1) @@ [0,1]

# Mixed arity recursion using both axes and parameter duplication
type P('a1,'a2) : (Q('a1) @@ [1,1]) + ('a2 @@ [0,1])
type Q('a1) : P('a1,'a1) @@ [1,0] + 'a1

# Direct self-dependence under annotation
type M('a1) : M('a1) @@ [0,1] + 'a1

# Abstract pair factoring via two auxiliaries
type U('a1,'a2) : V('a1) + W('a2)
type V('a1) : U('a1,'a1) @@ [1,0]
type W('a1) : U('a1,'a1) @@ [0,1]

# Concretes depending on abstracts to test ordering vs. display
type C1('a1) = H('a1) * 'a1
type C2('a1) = F('a1) + 'a1 @@ [1,0]


